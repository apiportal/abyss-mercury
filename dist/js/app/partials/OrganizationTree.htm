<template>
	<div class="field-controls">
		<div class="field--controls field-controls-hover">
			<a class="field-link nav--caret" data-toggle="collapse" v-bind:data-target="'#org'+col+index" v-bind:aria-controls="'org'+col+index">
				<strong class="m-0 txt-blue txt-uppercase d-block txt-r" v-if="title == 'add'">Add Organization <i class="fas fa-fw fa-plus"></i></strong>
				<strong class="m-0" v-if="title == 'edit'">{{org.name}}</strong>
			</a>
			<div class="ficon-actions dropdown dropdown-hover" v-if="title == 'edit'">
				<button type="button" data-toggle="dropdown" aria-expanded="false" class="dropdown-toggle"> <i class="fas fa-ellipsis-h"></i>
				</button>
				<ul role="menu" class="dropdown-menu dropdown-menu-right">
					<li>
						<a title="Remove Organization" v-on:click="deleteOrganization(org)"> <i class="fa fa-fw fa-trash-alt"></i> Remove Organization </a>
					</li>
				</ul>
			</div>
			<div v-bind:id="'org'+col+index" class="collapse clearfix field-tabs">
				<div class="px-3 pt-3 brd-t">
					<div class="form-group" v-bind:class="{ 'has-error': errors.has('name') }">
						<label for="name">Organization Name:</label>
						<input type="text" name="name" v-model="org.name" v-validate="'required|min:2'" class="form-control">
						<em v-bind:class="{ 'show': errors.has('name') }">{{ errors.first('name') }}</em>
					</div>
					<!-- <div class="form-group" v-if="$root.abyssOrgId != org.uuid" v-bind:class="{ 'has-error': errors.has('organization') }"> -->
					<!-- <div class="form-group" v-if="(title == 'edit' && deforg.uuid != org.uuid && org.organizationUser.organizationid != org.organizationUser.organizationrefid) || title == 'add'" v-bind:class="{ 'has-error': errors.has('organization') }"> -->
					<div class="form-group" v-if="(title == 'edit' && deforg.uuid != org.uuid) || title == 'add'" v-bind:class="{ 'has-error': errors.has('organization') }">
						<label>Parent Organization</label>
						<select class="form-control" name="organization" v-model="org.organizationid" v-validate="'required'">
							<option :value="deforg.uuid">{{deforg.name}}</option>
							<option v-for="(o,index) in orgs" :value="o.uuid" v-if="o.uuid != org.uuid">{{o.name}}</option>
						</select>
						<em v-bind:class="{ 'show': errors.has('organization') }">{{ errors.first('organization') }}</em>
					</div>
					<div class="form-group" v-bind:class="{ 'has-error': errors.has('url') }">
						<label for="url">Url:</label>
						<input type="text" name="url" v-model="org.url" class="form-control" v-validate="'url'">
						<em v-bind:class="{ 'show': errors.has('url') }">{{ errors.first('url') }}</em>
					</div>
					<div class="form-group" v-bind:class="{ 'has-error': errors.has('description') }">
						<label for="description">Description:</label>
						<textarea type="text" name="description" v-model="org.description" v-validate="'required'" class="form-control"></textarea>
						<em v-bind:class="{ 'show': errors.has('description') }">{{ errors.first('description') }}</em>
					</div>
					<div class="form-group d-flex justify-content-between">
						<button type="button" class="btn btn-secondary btn-rounded organizations_panel_btn" v-on:click="$root.cancelRightSidebar()">CANCEL</button>
						<button type="button" class="btn btn-primary btn-rounded" v-if="title == 'add'" v-on:click="organizationAction('add', org)">ADD</button>
						<button type="button" class="btn btn-primary btn-rounded" v-if="title == 'edit'" v-on:click="organizationAction('edit', org)">SAVE</button>
					</div>
				</div>
			</div>
		</div>
		<organization-tree v-if="sorg.organizationid == org.uuid && deforg.uuid != org.uuid" :key="sorg.uuid" v-for="(sorg,sindex) in $root.rootData.user.organizations" :org="sorg" :index="sindex" :orgs="orgs" :deforg="deforg" title="edit" :col="'sub'+sindex"></organization-tree>
	</div>
</template>

<script>
    define(["Vue"], function(Vue) {
		Vue.component("organization-tree", {
			template: template,
			props: ['org', 'index', 'orgs', 'title', 'deforg', 'col'],
			data() {
				return {
					isLoading: true,
				};
			},
			computed: {
			},
			methods : {
				organizationAction(act, org) {
					this.$validator.validateAll().then((result) => {
						if (result) {
							this.$root.organizationAction(act, org);
						}
					});
				},
				deleteOrganization(item) {
					this.$root.deleteOrganization(item);
				},
			},
			created() {
			},
		});
    });
</script>

<style>

div#div2 {
	border: 1px solid red;
}
</style>
